#!/bin/bash
#
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ Lockbox –≤ Airflow Variables
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./sync_lockbox_to_airflow.sh
#
# –ò–ª–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
#   ./sync_lockbox_to_airflow.sh <lockbox_secret_id> <airflow_url> <airflow_password>
#

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}üîê Lockbox ‚Üí Airflow Sync${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é terraform –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è outputs
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
TERRAFORM_DIR="$PROJECT_DIR/terraform"

cd "$TERRAFORM_DIR"

# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ Terraform –∏–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ -z "$1" ]; then
    echo -e "${YELLOW}üìä Fetching parameters from Terraform...${NC}"
    LOCKBOX_SECRET_ID=$(terraform output -raw lockbox_secret_id 2>/dev/null || echo "")
    AIRFLOW_CLUSTER_ID=$(terraform output -raw airflow_cluster_id 2>/dev/null || echo "")
    AIRFLOW_PASSWORD=$(terraform output -raw airflow_admin_password 2>/dev/null || echo "")
else
    LOCKBOX_SECRET_ID="$1"
    AIRFLOW_URL="$2"
    AIRFLOW_PASSWORD="$3"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
if [ -z "$LOCKBOX_SECRET_ID" ]; then
    echo -e "${RED}‚ùå Error: LOCKBOX_SECRET_ID not found${NC}"
    echo "   Please provide it as first argument or ensure Terraform is initialized"
    exit 1
fi

if [ -z "$AIRFLOW_PASSWORD" ]; then
    echo -e "${RED}‚ùå Error: AIRFLOW_PASSWORD not found${NC}"
    echo "   Please provide it as third argument or ensure Terraform is initialized"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º Airflow URL –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
if [ -z "$AIRFLOW_URL" ]; then
    if [ -n "$AIRFLOW_CLUSTER_ID" ]; then
        echo -e "${YELLOW}üîç Getting Airflow URL from cluster...${NC}"
        AIRFLOW_URL=$(yc airflow cluster get "$AIRFLOW_CLUSTER_ID" --format json | jq -r '.webserver_url' 2>/dev/null || echo "")
    fi
fi

if [ -z "$AIRFLOW_URL" ]; then
    echo -e "${RED}‚ùå Error: AIRFLOW_URL not found${NC}"
    echo "   Please provide it as second argument or ensure Airflow cluster is running"
    exit 1
fi

# –£–±–∏—Ä–∞–µ–º trailing slash –∏–∑ URL
AIRFLOW_URL="${AIRFLOW_URL%/}"

echo -e "${GREEN}‚úÖ Configuration:${NC}"
echo "   Lockbox Secret ID: $LOCKBOX_SECRET_ID"
echo "   Airflow URL: $AIRFLOW_URL"
echo "   Airflow Username: admin"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python —Å–∫—Ä–∏–ø—Ç–∞
PYTHON_SCRIPT="$SCRIPT_DIR/import_lockbox_to_airflow.py"
if [ ! -f "$PYTHON_SCRIPT" ]; then
    echo -e "${RED}‚ùå Error: Python script not found at $PYTHON_SCRIPT${NC}"
    exit 1
fi

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
chmod +x "$PYTHON_SCRIPT"

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
echo -e "${BLUE}üöÄ Starting import...${NC}"
echo ""

export LOCKBOX_SECRET_ID="$LOCKBOX_SECRET_ID"
export AIRFLOW_URL="$AIRFLOW_URL"
export AIRFLOW_USERNAME="admin"
export AIRFLOW_PASSWORD="$AIRFLOW_PASSWORD"

python3 "$PYTHON_SCRIPT"

EXIT_CODE=$?

if [ $EXIT_CODE -eq 0 ]; then
    echo ""
    echo -e "${GREEN}========================================${NC}"
    echo -e "${GREEN}‚úÖ Sync completed successfully!${NC}"
    echo -e "${GREEN}========================================${NC}"
    echo ""
    echo -e "${YELLOW}üí° Next steps:${NC}"
    echo "   1. Open Airflow UI: $AIRFLOW_URL"
    echo "   2. Go to Admin ‚Üí Variables"
    echo "   3. Verify that all variables are imported"
    echo "   4. Trigger your DAG!"
    echo ""
else
    echo ""
    echo -e "${RED}========================================${NC}"
    echo -e "${RED}‚ùå Sync failed with exit code $EXIT_CODE${NC}"
    echo -e "${RED}========================================${NC}"
    exit $EXIT_CODE
fi
